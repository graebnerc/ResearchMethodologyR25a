{
  "hash": "15a10df415e15c0aaaf4de13d2ade6be",
  "result": {
    "markdown": "---\ntitle: \"The Central Limit Theorem\"\ndate: \"2024-06-15\"\ndate-modified: last-modified\nexecute: \n  warning: false\n  message: false\n  echo: true\nformat: \n    html: \n        highlight-style: github\n        number-sections: true\n    pdf: \n        toc: false\n        number-sections: true\n---\n\n\n\n# Packages used\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tibble)\nlibrary(data.table)\nlibrary(ggplot2)\nlibrary(ggpubr)\nlibrary(icaeDesign)\n```\n:::\n\n\n\n# Statement of the CLT\n\nThe CLT states that - if certain general conditions are met - that the \ndistribution of the mean values of samples that were drawn from an arbitrary\npopulation tend to be normally distributed if the sample size becomes large \nenough. \n\nThis result holds irrespective of the distribution of the population as such.\n\n# Solution\n\nHere is an example. Consider the following population parameter, which is\nclearly distributed exponentially:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(123)\n# Population with 5000 exponentially distributed values\nN <- 5000\nexp_par <- 2\n\npopulation <- rexp(n = N, rate = exp_par)\npopulation_tab <- tibble(\"pop_n\" = population) \ntrue_mean <- mean(population)\n\npopulation_plot <- ggplot(data = population_tab, aes(x = pop_n)) +\n  geom_histogram(aes(y = after_stat(density))) + \n  scale_y_continuous(expand = expansion(add = c(0, 0.05))) +\n  labs(title = \"The population\", y = \"Density\") +\n  theme_icae() +\n  theme(axis.title.x = element_blank())\npopulation_plot\n```\n\n::: {.cell-output-display}\n![](session15-solution-clt_files/figure-pdf/unnamed-chunk-2-1.pdf){fig-pos='H'}\n:::\n:::\n\n\n\nTo illustrate the CLT, we conduct a MCS where we draw samples of sizes\n5, 10, 20 or 50, compute the means of the samples:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\niterations <- 500\nsample_sizes <- c(5, 10, 20, 50)\nmean_dist_list <- list()\n\nfor (i in seq_along(sample_sizes)){\n  sample_size <- sample_sizes[i]\n  \n  sample_means <- rep(NA, iterations)\n  \n  for (j in seq_len(iterations)){\n    sample_drawn <- sample(population, size = sample_size, replace = FALSE)\n    sample_means[[j]] <- mean(sample_drawn)\n  }\n  \n  sample_means_tab <- tibble(\n    \"sample_size\"=sample_size, \n    \"sample_means\"=sample_means\n  )\n  mean_dist_list[[sample_size]] <- sample_means_tab\n}\n\nfull_results <- data.table::rbindlist(mean_dist_list)\n```\n:::\n\n\n\nWe now visualize the resulting sampling distributions using histograms.\nTo see how the distribution becomes more and more similar to a noramel \ndistribution, we add a fitted normal distribution on each histogram:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhist_plot <- ggplot(\n  data = full_results, aes(x=sample_means)\n  ) +\n  geom_histogram(\n    mapping = aes(y=after_stat(density)), \n    alpha=0.5, color=\"#00395B\", fill=\"#00395B\"\n    ) +\n  scale_y_continuous(expand = expansion(add = c(0, 0.05))) +\n  scale_x_continuous(limits = c(-0.2, 1.2), expand = expansion()) +\n  facet_wrap(~sample_size, ncol = 4) +\n  stat_function(\n    data = dplyr::filter(full_results, sample_size==5), \n    fun = dnorm, \n    args = list(\n      mean = mean(dplyr::filter(full_results, sample_size==5)$sample_means), \n      sd = sd(dplyr::filter(full_results, sample_size==5)$sample_means))\n  ) + \n  stat_function(\n    data = dplyr::filter(full_results, sample_size==10), \n    fun = dnorm, \n    args = list(\n      mean = mean(dplyr::filter(full_results, sample_size==10)$sample_means), \n      sd = sd(dplyr::filter(full_results, sample_size==10)$sample_means))\n  ) + \n  stat_function(\n    data = dplyr::filter(full_results, sample_size==20), \n    fun = dnorm, \n    args = list(\n      mean = mean(dplyr::filter(full_results, sample_size==20)$sample_means), \n      sd = sd(dplyr::filter(full_results, sample_size==20)$sample_means))\n  ) + \n  stat_function(\n    data = dplyr::filter(full_results, sample_size==50), \n    fun = dnorm, \n    args = list(\n      mean = mean(dplyr::filter(full_results, sample_size==50)$sample_means), \n      sd = sd(dplyr::filter(full_results, sample_size==50)$sample_means))\n  ) + \n  labs(x = \"Sample means\", y = \"Density\", title = \"The sampling distributions\") +\n  theme_icae()\nhist_plot\n```\n\n::: {.cell-output-display}\n![](session15-solution-clt_files/figure-pdf/unnamed-chunk-4-1.pdf){fig-pos='H'}\n:::\n:::\n\n\n\nBut note that the CLT does not hold universally, i.e. certain conditions must\nbe met and it does not hold for all underlying distributions. It does not hold,\nfor example, if the underlying distribution has infinite variance.",
    "supporting": [
      "session15-solution-clt_files/figure-pdf"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": null,
    "postProcess": false
  }
}