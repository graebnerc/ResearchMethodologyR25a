---
title: Experiments # Also check out line 43
author: Claudius Gr√§bner-Radkowitsch
date: '2025-06-13'
documentclass: scrartcl
execute: 
  freeze: auto
format: 
  html:
    theme: readable
    highlight: tango
    toc: true
    toc_depth: 2
    number_sections: true
    message: false
    warnig: false
  pdf:
    papersize: a4
    toc: true
    toc-depth: 2
    number-sections: true
    include-in-header: 
      text: |
        \usepackage{lmodern} 
        \usepackage{graphicx}
        \usepackage{hyperref}
        \usepackage{url}                
        \usepackage{xcolor}
        \usepackage{booktabs}
        \usepackage{listings}
        \lstloadlanguages{R}
        
        \definecolor{eufblue}{RGB}{0,57,91}
        \definecolor{eufgrey}{RGB}{111,111,111}
        \definecolor{euflightblue}{RGB}{105,170,205}
        
        \hypersetup{
        pdfauthor={Claudius Graebner-Radkowitsch}
        colorlinks=true,
        linkcolor=euflightblue,
        urlcolor=euflightblue
        }
        \usepackage[includehead,includefoot,top=2cm, bottom=1.5cm]{geometry}
        \usepackage[headsepline, footsepline]{scrlayer-scrpage}
        \pagestyle{scrheadings}
        \clearpairofpagestyles
        \ihead{Tutorial: Experiments}
        %\chead{Kopfzeile Mitte}
        \ohead{\pagemark} %
        \ifoot{}
        \cfoot{\href{https://researchmethodology25spring.netlify.app}{Research Methodology - Spring Semester 2025}} % Fu√üzeile Mitte
        \ofoot{} 
        \setkomafont{disposition}{\color{eufblue}\bfseries}
---

# Introduction

In this lab we will learn how to analyze data obtained from experiments. We will
complement the lecture by also introducing some additiona, practically relevant
concepts.

More precisely, we focus on the following aspects:

- Import and explore datasets as typically produced by experiments
- Conduct t-tests for simple experimental comparisons
- Perform ANOVA for multi-group comparisons
- Analyze factorial experimental designs
- Calculate and interpret effect sizes
- Create professional visualizations of experimental results
- Understand how ANOVA is a special case of linear regression

Throuout the tutorial we will use the following packages:

```{r}
library(dplyr)        # Data manipulation
library(ggplot2)      # Data visualization
library(ggdist)       # More visualization options
library(readr)        # Simple data import
library(broom)        # Extract model data
library(effectsize)   # Effect size calculations
library(car)          # Advanced ANOVA functions
library(emmeans)      # Post-hoc comparisons
library(knitr)        # For nice tables
library(kableExtra)   # For enhanced table formatting
library(patchwork)    # For aligning multiple plots
library(pwr)          # For power analysis and sample size planning
```

We will use the following data sets, which are available for download from the
lab webpage.

```{r}
leadership_study_between <- read_csv("leadership_study_between.csv")
leadership_study_within <- read_csv("leadership_study_within.csv")
communication_study <- read_csv("communication_study.csv")
factorial_study <- read_csv("factorial_study.csv")
```

# Data Exploration

As usual, it is a good idea to start with looking at the data sets, such that you know what the data looks like:^[I use the function `kable()` for nicer output in the html file. 
When you replicate the code in R-Studio its best to skip the part `|> kable()`.]

```{r}
head(leadership_study_between) |> 
  kable()
```

```{r}
summary(leadership_study_between) |> 
  kable()
```
```{r}
glimpse(communication_study) |> 
  kable()
```

```{r}
summary(communication_study) |> 
  kable()
```

```{r}
glimpse(factorial_study) |> 
  kable()
```

```{r}
summary(factorial_study) |> 
  kable()
```


**üí° Short recap**: How have these data sets been created? How do they connect to the experimental designs discussed in the lecture?

::: {.callout-tip title="Possible answers", collapse="true"} 

- **Dataset 1**: Classic randomized controlled trial (RCT) with treatment and control groups
- **Dataset 2**: One-way experimental design with three conditions (between-subjects)
- **Dataset 3**: 2√ó2 factorial design allowing us to test main effects and interactions
- **Connection to lecture**: These represent the three main experimental designs we discussed - simple, multi-group, and factorial
:::

---

# Part 2: Simple Experiments - t-tests

Assume we are asking the following research question:

> Does leadership training improve team performance?

One way to tackle this question is to compare a treatment group, which has received a leadership training, to a control group, which has not received such training. If the groups are otherwise similar, then this setting should help us to identify the causal effect of the leadership training.^[At this point we assume that the groups were similar before the training. In practice, it would be good to first make sure the performances of the groups before the training were similar.]

## Descriptive statistics

For this task, we will use the first data set.
Let us first compute the standard statistics:

```{r}
descriptive_stats <- leadership_study_between %>%
  group_by(group) %>%
  summarise(
    n = n(),
    mean = mean(team_performance),
    sd = sd(team_performance),
    median = median(team_performance),
    .groups = 'drop'
  )

kable(descriptive_stats, digits = 2)
```

As usual, it is also strongly recommended to complement the quantitative info with a visualization.
Data such as those is often presented using boxplots:

```{r}
ggplot(leadership_study_between, aes(x = group, y = team_performance, fill = group)) +
  geom_boxplot(alpha = 0.7) +
  geom_jitter(width = 0.2, alpha = 0.5) +
  stat_summary(fun = mean, geom = "point", shape = 23, size = 3, fill = "red") +
  labs(title = "Team Performance by Group",
       x = "Group",
       y = "Team Performance Score",
       caption = "Red diamonds show group means") +
  theme_minimal() +
  theme(legend.position = "none")
```

But boxplots might shallow important distributional info, so you should use them carefully or complement them with other tools. Below is an alternative that provides more information on the distribution of the data.
For more on this issue see @Holtz_2025.



```{r}
ggplot(
  data = leadership_study_between, 
  mapping = aes(x = group, y = team_performance, fill = group)
  ) +
    stat_halfeye(
    adjust = 0.5,
    justification = -0.2,
    .width = 0,
    point_colour = NA
  ) +
  geom_boxplot(
    width = 0.12,
    outlier.color = NA,
    alpha = 0.5
  ) +
  stat_dots(
    side = "left",
    justification = 1.1,
    binwidth = 0.85
  ) +
  labs(
    title = "The effect of leadership training",
    y = "Team performance") +
  theme_minimal() +
  theme(
    legend.position = "none",
    plot.title = element_text(size = 11),
    axis.title.x = element_blank()
  ) 
```



## Assumption Checking

In the following we want to compare the means across independent groups.
To this end, we may use a t-test. 

But such statistical tests make specific assumptions about the data. If these assumptions are violated, the results may be unreliable or incorrect. Therefore, it is important to check the adequacy of the data first.

And no worries if the assumptions for one test are violated - usually there are alternatives available.

In the present case, we want to use a simple t-test. This test makes two assumptions:

1. The two groups each are normally distributed.
2. The variances of both groups are the same. 

To test the first assumption, we can use the **Shapiro-Wilk Test for Normality**.
Here we test the following hypotheses:

- $H_0$: The data is normally distributed
- $H_1$: The data is not normally distributed  

Thus, we we get $p > 0.05$, we cannot reject $H_0$. But for smaller $p$-values,
we should reject $H_0$ and need to look for alternative tests.

```{r}
leadership_study_between |> 
  filter(group=="control") |> 
  pull(team_performance) |> 
  shapiro.test()
```

```{r}
leadership_study_between |> 
  filter(group=="training") |> 
  pull(team_performance) |> 
  shapiro.test()
```

Good! We cannot reject the hypothesis of normally distributed data!

The next step is to test, whether both groups have the same variance. 
Levene's test can be used to do exactly this. It tests:

- **$H_0$**: The variances are equal across groups
- **H_1**: The variances are not equal across groups

If $p > 0.05$, we do not reject $H_0$ and we can use a simple t-test.
If we have to reject $H_0$, however, it would be better to use the more robust Welch test.

```{r}
car::leveneTest(team_performance ~ group, data = leadership_study_between)
```

## Independent t-test

**Why we use t-tests**: To compare means between two groups when we have continuous data and want to test if there's a statistically significant difference.

```{r}
t_test_result <- t.test(
  team_performance ~ group, 
  data = leadership_study_between,
  var.equal = TRUE # Use FALSE if variances unequal
  )  
t_test_result
```

## Effect Size Calculation

**What are effect sizes?** The previous result tells us that the difference in 
means between the groups appeaers to be about 
`r round(t_test_result$estimate[1] - t_test_result$estimate[2], 2)`. But is this a lot?
Effect sizes tell us about the practical significance of our findings - how big is the difference we found? Unlike $p$-values, effect sizes are not influenced by sample size and help us understand if our statistically significant result is also practically meaningful.
**Cohen's d** is often used: This standardized effect size tells us how many standard deviations apart the two group means are.

- **Small effect**: d ‚âà 0.2 (groups overlap about 85%)
- **Medium effect**: d ‚âà 0.5 (groups overlap about 67%)  
- **Large effect**: d ‚âà 0.8 (groups overlap about 53%)

The implementation in R is trivial:

```{r}
cohens_d <- effectsize::cohens_d(team_performance ~ group, data = leadership_study_between)
print(cohens_d)
```

The key value here is Cohen's of `r round(cohens_d$Cohens_d, 2)`! 
(For the interpretation see the exercise below).

## Paired t-test Example

Next, we might want to look at our research question from a slightly different angle.
Rather than the between-subject design from above, we now take a *within-subject* view:
to this end, we want to check whether the training had an effect on those people who were in the training (treatment) group by comparing their performance before and after the training.

To this end, we focus on the training group, and then
use the function `t.test()` with the argument `paired = TRUE`.
This makes sure we are using the version of the test for the within-subjects context:

```{r}
training_group <- leadership_study_within %>% filter(group == "training")
paired_result <- t.test(training_group$post_performance, 
                       training_group$pre_performance,
                       paired = TRUE)
print(paired_result)
```

**üéØ Exercise (5 minutes)**: Interpret the results. What can we conclude about the effectiveness of leadership training?

::: {.callout-tip title="Possible answers", collapse="true"} 
- **Statistical significance**: If $p < 0.05$, training significantly improved performance; since $p\approx 0$, the training has a highly significant effect
- **Effect size interpretation**: Cohen's d is large, so we have a large effect. This suggests the effect of the training is also practically meaningful.
- **Confidence interval**: If the CI doesn't include 0, we're confident there's a real difference; even if we are very conservative, we would still expect a 10 point improvement of the training.
- **Business implication**: Training appears effective and worth the investment
:::

---

# Part 3: Multi-Group Experiments - ANOVA (25 minutes)

Let us now turn to the following research question:

> Which communication method (face-to-face, video call, email) leads to highest satisfaction?

Note that this time we not only compare one group to another as in the previous section, but we need to compare three groups with each other as we have three different communication methods.
Therefore, we cannot use simple t-tests, but need to use an ANOVA.

## Descriptive statistics 

But first, let us again look at the data:

```{r}
communication_study %>%
  group_by(communication_method) %>%
  summarise(
    n = n(),
    mean = mean(satisfaction_score),
    sd = sd(satisfaction_score),
    min = min(satisfaction_score),
    max = max(satisfaction_score),
    .groups = 'drop'
  ) |> 
  kable(digits = 2)

```

And complement this by a visualization:

```{r}
ggplot(
  data = communication_study, 
  mapping = aes(
    x = communication_method, 
    y = satisfaction_score, 
    fill = communication_method,
    color = communication_method)
  ) +
    stat_halfeye(
    adjust = 0.5,
    justification = -0.2,
    .width = 0,
    point_colour = NA
  ) +
  geom_boxplot(
    width = 0.12,
    outlier.color = NA,
    alpha = 0.5
  ) +
  stat_dots(
    side = "left",
    justification = 1.1,
    binwidth = 0.15
  ) +
  stat_summary(fun = mean, geom = "point", shape = 23, size = 3, fill = "white") +
  labs(
    title = "Satisfaction Scores by Communication Method",
    x = "Communication Method",
    y = "Satisfaction Score (1-10)") +
  theme_minimal() +
  theme(
    legend.position = "none",
    plot.title = element_text(size = 11),
    axis.title.x = element_blank()
  ) 
```



## ANOVA Assumptions

ANOVA is more robust than t-tests but still requires certain conditions to be met for valid results.
In fact, we are testing the same assumptions as in the t-test case:

- **Normality of Residuals**: For ANOVA, we check if the residuals (not the raw data) are normally distributed.


**Homogeneity of Variances**: ANOVA assumes that the variance of the dependent variable is equal across all groups.


Let us start with testing the normality of the residuals. We again use the Shapiro test, which tests the following hypothesis:

- **$H_0$**: Residuals are normally distributed
- **$H_1$**: Residuals are not normally distributed

Thus, if $p > 0.05$, the Null cannot be rejected and we can assume the residuals to follow a normal distribution.
If $p \leq 0.05$, however, the hypothesis of normally distributed residuals must be rejected and we need to consider transforming the data or using a non-parametric test.

```{r}
aov_model <- aov(satisfaction_score ~ communication_method, data = communication_study)

shapiro.test(residuals(aov_model))
```

Since $p>0.05$ we are on the save side!

We then check the equality of variances and again use Levene's test with the following hypotheses:

- **$H_0$**: Variances are equal across all groups  
- **$H_1$**: Variances are not equal across groups

Thus, if $p > 0.05$, the Null cannot be rejected and we can assume the variances to be equal.
If $p \leq 0.05$, however, the hypothesis of equal variances must be rejected and we need to consider transforming the data or using  Welch's ANOVA.

```{r}
car::leveneTest(satisfaction_score ~ communication_method, data = communication_study)
```

Again, the Null cannot be rejected and we can continue with the ANOVA as planned.

Before we enter the actual analysis we can also create the common diagnostics plots:

```{r}
model_data <- augment(aov_model) %>%
  mutate(
    sqrt_abs_resid = sqrt(abs(.std.resid)),
    obs_number = row_number()
  )

residuals_vs_fitted <- model_data %>%
  ggplot(aes(x = .fitted, y = .resid)) +
  geom_point(alpha = 0.7) +
  geom_smooth(method = "loess", se = FALSE, color = "red") +
  geom_hline(yintercept = 0, linetype = "dashed", alpha = 0.7) +
  labs(title = "Residuals vs Fitted", x = "Fitted values", y = "Residuals") +
  theme_minimal()

qq_plot <- model_data %>%
  ggplot(aes(sample = .std.resid)) +
  stat_qq(alpha = 0.7) +
  stat_qq_line(color = "red") +
  labs(title = "Normal Q-Q", x = "Theoretical Quantiles", y = "Standardized Residuals") +
  theme_minimal()

scale_location <- model_data %>%
  ggplot(aes(x = .fitted, y = sqrt_abs_resid)) +
  geom_point(alpha = 0.7) +
  geom_smooth(method = "loess", se = FALSE, color = "red") +
  labs(title = "Scale-Location", x = "Fitted values", 
       y = expression(sqrt("|Standardized residuals|"))) +
  theme_minimal()

residuals_vs_leverage <- model_data %>%
  ggplot(aes(x = .hat, y = .std.resid)) +
  geom_point(alpha = 0.7) +
  geom_smooth(method = "loess", se = FALSE, color = "red") +
  geom_hline(yintercept = 0, linetype = "dashed", alpha = 0.7) +
  labs(title = "Residuals vs Leverage", x = "Leverage", y = "Standardized Residuals") +
  theme_minimal()

combined_patchwork <- (residuals_vs_fitted | qq_plot) / 
                            (scale_location | residuals_vs_leverage) +
  plot_annotation(
    title = "ANOVA Model Diagnostic Plots",
    subtitle = "Checking model assumptions",
    theme = theme(plot.title = element_text(size = 16, hjust = 0.5))
  )
combined_patchwork
```

- **Residuals vs Fitted**: Should show random scatter (no patterns)
- **Q-Q plot**: Points should follow the diagonal line (normality)
- **Scale-Location**: Should show random scatter (equal variances)
- **Residuals vs Leverage**: Identifies influential outliers

## One-Way ANOVA

Since we compare three groups we do not use t-tests but an ANOVA. 

As you know, ANOVA is actually a special case of linear regression. 
Therefore, we can get the ANOVA results in two equivalent ways.

The first option is to use the classical `aov()` function:

```{r}
anova_result <- aov(satisfaction_score ~ communication_method, data = communication_study)
summary(anova_result)
```

The second option is to use `lm()` as we know it from linear regression:

```{r}
lm_model <- lm(satisfaction_score ~ communication_method, data = communication_study)
anova(lm_model)
```

- The overall $p$-value is extremely small, so the Null hypothesis of no difference between the groups should definitely be rejected
- In other words: Communication method significantly affects satisfaction scores
- This means that at least one communication method produces significantly different satisfaction scores than the others
- But the result does not tell us which specific methods differ from each other (need post-hoc tests)
- The result also does not contain information about the direction of differences (which method is best/worst) or the effect size

## Detour: categorical variables in Regression

When you add a categorial variable as a predictor to your regression, R automatically creates dummy variables for categorical predictors. The first level alphabetically becomes the reference group:

```{r}
summary(lm_model)$coefficients |> 
  kable(digits = 3)
```
Since 'email' comes first alphabetically, it is the reference group.

- **Intercept** = mean of reference group (email, comes first alphabetically)
- **communication_methodface_to_face** = difference between face_to_face and email
- **communication_methodvideo_call** = difference between video_call and email

We can verify this manually:
```{r}
communication_study %>%
  group_by(communication_method) %>%
  summarise(mean = mean(satisfaction_score), .groups = 'drop') |> 
  kable(digits = 2)
```


### Detour: When to Use `lm()` vs `aov()`

As shown above, both approaches give identical results.
Still, they offer different perspectives:

**Use aov() when:**
- You want traditional ANOVA output
- Focus is on group comparisons
- Need post-hoc tests such as `TukeyHSD()`, which take the `aov`-model as an input

**Use lm() when:**
- You want to see specific contrasts
- Planning to add continuous covariates later
- Want regression-style interpretation
- Building toward more complex models


::: {.callout-tip collapse="true"}
### Example: From ANOVA to ANCOVA

If we add a continuous variable to an ANOVA, we get an ANCOVA:

```{r}
ancova_model <- lm(satisfaction_score ~ communication_method + task_completion_time, 
                   data = communication_study)
summary(ancova_model) 
```

In the example, we now control for individual differences in task completion time.
While trivial in the `lm()`-context, this would be much harder to do with the aov() approach!
:::


## Effect Size for ANOVA

$\eta^2$ tells us what proportion of the total variance in the dependent variable is explained by the independent variable and, as explained above, serves as a standardized measure for comparing effect sizes:

Remember that:

- **Small effect**: Œ∑¬≤ ‚âà 0.01 (1% of variance)
- **Medium effect**: Œ∑¬≤ ‚âà 0.06 (6% of variance)
- **Large effect**: Œ∑¬≤ ‚âà 0.14 (14% of variance)
- **Example**: Œ∑¬≤ = 0.23 means communication method explains 23% of satisfaction variance

In our case:

```{r}
eta_squared <- effectsize::eta_squared(anova_result)
print(eta_squared)
```

## Post-Hoc Comparisons

The ANOVA tells us there's a difference somewhere among the groups, but not which specific groups differ. 
This is why we need post-hoc tests:
they provide these pairwise comparisons while controlling for multiple testing.

::: {.callout-tip collapse="true"}
### The multiple testing problem

If we do multiple t-tests (e.g. one for each pairwise comparison), our Type I error rate will inflate. 
Post-hoc tests adjust critical values to maintain overall $\alpha = 0.05$.
:::


The most common post-hoc test has a nice name:
Tukey's Honestly Significant Difference (HSD). 
It takes the fitted ANOVA model as its input:

```{r}
tukey_result <- TukeyHSD(anova_result)
print(tukey_result)
```

This suggests that the following differences exist:

- Face-to-face > Email: 1.70 points higher satisfaction ($p < 0.001$)
- Video call > Email: 1.23 points higher satisfaction ($p = 0.002$)

But there are no significant differences between video calls and face-to-face ($p = 0.35$)

Thus, both face-to-face and video call communication methods produce significantly higher satisfaction scores than email, but face-to-face and video call don't differ significantly from each other.


# Part 4: Factorial Designs (20 minutes)

For this last part we consider the following research question:

> How do feedback type and experience level interact to affect performance improvement?

We use the data stored as `factorial_study`:

```{r}
factorial_study %>%
  group_by(feedback_type, experience_level) %>%
  summarise(
    n = n(),
    mean = mean(performance_improvement),
    sd = sd(performance_improvement),
    .groups = 'drop'
  ) |> 
  kable(digits = 2)
```

We then visualize the relationship using an interaction plot as discussed in the lecture:

```{r}
ggplot(
  data = factorial_study, 
  mapping = aes(
    x = experience_level, 
    y = performance_improvement, 
    color = feedback_type, 
    group = feedback_type)
  ) +
  stat_summary(fun = mean, geom = "point", size = 2) +
  stat_summary(fun = mean, geom = "line", linewidth = 1) +
  stat_summary(fun.data = mean_se, geom = "errorbar", width = 0.1) +
  guides(color = guide_legend(position = "inside")) +
  labs(
    title = "Interaction Plot: Feedback Type √ó Experience Level",
    x = "Experience Level",
    y = "Performance Improvement",
    color = "Feedback Type") +
  theme_minimal() +
  theme(legend.position.inside = c(0.5, 0.2))
```


This already gives us a good visual impression of the results, but we also want to analyze the results quantitatively.

### Two-Way ANOVA

The factorial design allows us to consider interaction effects among factors. 
But to detect such interaction, we must use a two-way ANOVA, not the traditional one!

To do this, we still use the same function `aov()` (or `lm()`), but add the additional factor to the formula:

```{r}
factorial_model <- aov(
  formula = performance_improvement ~ feedback_type * experience_level, 
  data = factorial_study)
summary(factorial_model)

```

And while the classical ANOVA was the same as simple linear regression with categorial variables, 
two-way ANOVA is the same as *multiple* regression with interaction effects:

```{r}
lm_factorial <- lm(performance_improvement ~ feedback_type * experience_level, 
                   data = factorial_study)
anova(lm_factorial)
```


::: {.callout-tip collapse="true"}
### Dummy coding in the two-way context

With two factors, R creates dummy variables for each factor plus their interaction:

```{r}
coefficients(lm_factorial)
```

Their interpretation is as follows:

- **Intercept** = mean of reference group (critical feedback + expert)
- **feedback_typepositive** = main effect of positive vs critical for experts only
- **experience_levelnovice** = main effect of novice vs expert for critical feedback only
- **interaction** = additional effect of being novice AND receiving positive feedback


:::




## Effect Sizes for Factorial Design

Effect sizes are computed in the same way:

```{r}
eta_squared_factorial <- effectsize::eta_squared(factorial_model)
print(eta_squared_factorial)
```


## Advanced Visualization of factorial designs


```{r}
ggplot(
  data = factorial_study, 
  mapping = aes(
    x = feedback_type, 
    y = performance_improvement, 
    fill = feedback_type)
  ) +
    stat_halfeye(
    adjust = 0.5,
    justification = -0.2,
    .width = 0,
    point_colour = NA
  ) +
  geom_boxplot(
    width = 0.12,
    outlier.color = NA,
    alpha = 0.5
  ) +
  stat_dots(
    side = "left",
    justification = 1.1,
    binwidth = 0.15
  ) +
  facet_wrap(~ experience_level) +
  labs(
    title = "Performance Improvement by Feedback Type and Experience",
    x = "Feedback Type",
    y = "Performance Improvement") +
  theme_minimal() +
  theme(
    legend.position = "none",
    plot.title = element_text(size = 11),
    axis.title.x = element_blank()
  ) 
```


**üéØ Intermediate exercise**: 
1. Interpret the main effects and interaction
2. What practical recommendations would you make based on these results?
3. How does this connect to the i-frame vs s-frame discussion from the lecture?

::: {.callout-tip title="Possible answers", collapse=} 2
**1. Interpretation:**
- **Main effect of feedback**: If significant, one type of feedback is generally better
- **Main effect of experience**: If significant, novices and experts respond differently overall
- **Interaction effect**: If significant, optimal feedback depends on experience level
- **Visual cues**: Parallel lines = no interaction; crossing lines = interaction present

**2. Practical recommendations:**
- **If interaction significant**: Customize feedback approach based on experience level
- **For novices**: Might need more positive, encouraging feedback
- **For experts**: Might benefit from more critical, detailed feedback
- **Training programs**: Should differentiate based on employee experience

**3. i-frame vs s-frame connection:**
- **i-frame approach**: Train managers to give different feedback to different employees
- **s-frame approach**: Change organizational culture and systems to support appropriate feedback
- **Individual focus**: Coaching managers on feedback skills
- **Structural focus**: Performance management systems that account for experience levels
:::

---

# Part 5: Power Analysis and Sample Size Planning

Statistical power is the probability of detecting an effect when it truly exists. 
You know from the lecture that the decision about sample sizes determines in part statistical power.
Power analysis helps us plan adequate sample sizes and evaluate our study's sensitivity.

## General aspects of power analysis

Remember the **components of power analysis:**

- **Power**: Probability of detecting effect (usually we want ‚â• 0.8)
- **Effect size**: How big a difference we want to detect
- **Sample size**: Number of participants needed
- **Alpha level**: Type I error rate (usually 0.05)

We can use power analysis in two different ways:

1. **Post-hoc (observed)**: What was our power given the sample size we had?
2. **A priori (prospective)**: How many participants do we need to detect an effect?

Regarding the first, we may ask: 
what was our power to detect the effect we found in the leadership study?

```{r}
observed_power <- pwr.t.test(n = 30, d = as.numeric(cohens_d$Cohens_d), sig.level = 0.05)
print(observed_power)
```
Lets turn to the 
*a priori power analysis*, i.e. what you should do BEFORE collecting data to determine how many participants you need.

In a first step, you always need to specify your research parameters:

- What effect size do you want to detect?
- What power level do you want? (typically 0.8 or 0.9)
- What alpha level will you use? (typically 0.05)

The remaining steps depend on the analysis method we wish to employ:

## t-Tests

Assume we want to plan a new leadership training study, similar to the one above.
We want to detect a medium effect ($d = 0.5$) with 80% power.

```{r}
sample_size_medium <- pwr.t.test(d = 0.5, power = 0.8, sig.level = 0.05)
print(sample_size_medium)
```

If instead we would like to identify a small effect (with $d=0.5$). 
Everything else remains the same:

```{r}
sample_size_small <- pwr.t.test(d = 0.2, power = 0.8, sig.level = 0.05)
print(sample_size_small)
```

And what would happen if we wanted higher power (90%) for a medium effect?

```{r}
sample_size_high_power <- pwr.t.test(d = 0.5, power = 0.9, sig.level = 0.05)
print(sample_size_high_power)
```

We see that small design choices can have huge effects:

```{r}
power_results <- tibble(
  Scenario = c("Medium effect, 80% power", "Small effect, 80% power", "Medium effect, 90% power"),
  Effect_Size = c(0.5, 0.2, 0.5),
  Power = c(0.8, 0.8, 0.9),
  Sample_per_Group = c(
    ceiling(sample_size_medium$n),
    ceiling(sample_size_small$n), 
    ceiling(sample_size_high_power$n)
  ),
  Total_Sample = c(
    ceiling(sample_size_medium$n) * 2,
    ceiling(sample_size_small$n) * 2,
    ceiling(sample_size_high_power$n) * 2
  )
)

kable(power_results)
```



##ANOVA 

Assume we are planning a communication study with 3 groups and we want to 
detect a medium effect (f = 0.25) with 80% power. 
Note that what was Cohen's d for the t-test case, has now become Cohens f for the ANOVA case:

```{r}
sample_size_anova <- pwr.anova.test(k = 3, f = 0.25, sig.level = 0.05, power = 0.8)
print(sample_size_anova)
```

# Summary and Key Takeaways

## Key take-aways
1. **Data exploration** is crucial before statistical testing
2. **Assumption checking** ensures valid results and guides method selection
3. **Effect sizes** provide practical significance context beyond p-values
4. **Visualization** aids interpretation and communication of results
5. **ANOVA is just regression** with categorical predictors
6. **Both aov() and lm()** give identical results but offer different perspectives
7. **Post-hoc tests** control for multiple comparisons when making pairwise comparisons
8. **Factorial designs** allow detection of interactions between factors

### Key Decision Points in Analysis
- **Assumptions violated**: Choose appropriate alternatives (Welch's tests, transformations, non-parametric)
- **Multiple groups**: ANOVA preferred over multiple t-tests
- **Factorial designs**: Allow testing of interactions between factors
- **Effect size interpretation**: Always consider practical alongside statistical significance
- **Post-hoc testing**: Required when ANOVA is significant to identify which groups differ
